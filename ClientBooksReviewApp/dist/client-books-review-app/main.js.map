{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/book-full-information/book-full-information-routing.module.ts","./src/app/book-full-information/book-full-information.module.ts","./src/app/book-full-information/book-full-information/book-full-information.component.ts","./src/app/book-full-information/book-full-information/book-full-information.component.html","./src/app/book-reviews/book-reviews.component.ts","./src/app/book-reviews/book-reviews.component.html","./src/app/books/Modules/books-routing.module.ts","./src/app/books/Modules/books.module.ts","./src/app/books/books.component.ts","./src/app/books/books.component.html","./src/app/books/sorting/sorting.component.ts","./src/app/books/sorting/sorting.component.html","./src/app/books/tiles/books-modal/books-modal.component.ts","./src/app/books/tiles/books-modal/books-modal.component.html","./src/app/books/tiles/tiles.component.ts","./src/app/books/tiles/tiles.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/login.module.ts","./src/app/modal-success/modal-success.component.ts","./src/app/modal-success/modal-success.component.html","./src/app/pipes/date-without-time.pipe.ts","./src/app/rating/rating.component.ts","./src/app/rating/rating.component.html","./src/app/registration/registration.component.ts","./src/app/registration/registration.component.html","./src/app/registration/registration.module.ts","./src/app/review/review.component.ts","./src/app/review/review.component.html","./src/app/search/search.component.ts","./src/app/search/search.component.html","./src/app/shared/custom-validators/password-confirmation-validator.service.ts","./src/app/shared/services/authentication.service.ts","./src/app/shared/services/error-handling.service.ts","./src/app/shared/services/request.service.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BooksComponent } from './books/books.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegistrationComponent } from './registration/registration.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo:'book', pathMatch: 'full' },\n  { path: 'registration', component: RegistrationComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'books', component: BooksComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ClientBooksReviewApp';\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { LoginComponent } from './login/login.component';\nimport { RequestService } from './shared/services/request.service';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { PasswordConfirmationValidatorService } from './shared/custom-validators/password-confirmation-validator.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ErrorHandlingService } from './shared/services/error-handling.service';\nimport { AuthenticationService } from './shared/services/authentication.service';\nimport { BooksModule } from './books/Modules/books.module';\nimport { BookFullInformationModule } from './book-full-information/book-full-information.module';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { RegistrationModule } from './registration/registration.module';\nimport { LoginModule } from './login/login.module';\nimport { ReviewComponent } from './review/review.component';\nimport { ModalSuccessComponent } from './modal-success/modal-success.component';\nimport { SearchComponent } from './search/search.component';\nimport { SharedModule } from './shared/shared.module';\n\nexport function tokenGetter() {\n  return localStorage.getItem(\"token\");\n}\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BookFullInformationModule,\n    BooksModule,\n    RegistrationModule,\n    LoginModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    SharedModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,\n        allowedDomains: ['localhost:5001'],\n        disallowedRoutes:[]\n      }\n    })\n  ],\n  providers: [RequestService, PasswordConfirmationValidatorService, { provide: HTTP_INTERCEPTORS, useClass: ErrorHandlingService, multi: true },\n     AuthenticationService],\n  bootstrap: [AppComponent, SearchComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BookFullInformationComponent } from './book-full-information/book-full-information.component';\n\nconst routes: Routes = [\n  { path: 'book/:id', component: BookFullInformationComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BookFullInformationRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BookFullInformationRoutingModule } from './book-full-information-routing.module';\nimport { BookFullInformationComponent } from './book-full-information/book-full-information.component';\nimport { SharedModule } from '../shared/shared.module';\n\n\n@NgModule({\n  declarations: [\n    BookFullInformationComponent\n  ],\n  imports: [\n    CommonModule,\n    BookFullInformationRoutingModule,\n    SharedModule\n  ]\n})\nexport class BookFullInformationModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Book } from 'src/app/interfaces/book';\nimport { RequestService } from 'src/app/shared/services/request.service';\n\n@Component({\n  selector: 'app-book-full-information',\n  templateUrl: './book-full-information.component.html',\n  styleUrls: ['./book-full-information.component.css']\n})\nexport class BookFullInformationComponent implements OnInit {\n\n  @Input() public book: Book;\n  public bookId: string;\n  public readonly backgroundColorForRating = \"black\";\n  public isShow = false;\n\n  constructor(private _requestService: RequestService, private _route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.getRouteParameters();\n    this.getBook();\n  }\n\n  public getRouteParameters() {\n    this._route.params\n    .subscribe(params => {\n      this.bookId = params['id'];\n    });\n  }\n\n  public getBook() {\n    this._requestService.getData(\"books/getbook?id=\" + this.bookId)\n    .subscribe((book: Book) => {\n      console.log(book);\n      this.book = book;\n      this.isShow = true;\n    });\n  }\n}\n","<div class=\"container\" *ngIf=\"isShow\">\n  <div class=\"d-flex justify-content-center\">\n    <div class=\"bg-container\">\n\n      <div class=\"row\">\n\n        <div class=\"col-2\">\n          <img src=\"data:image/png;base64,{{book.imageCover}}\" class=\"cover-size\" alt=\"Book cover\">\n        </div>\n        <div class=\"col-6\">\n          <h1 class=\"text-center\">{{book.name}}</h1>\n          <p class=\"text-center\">{{book.author}}</p>\n        </div>\n        <div class=\"col-4\">\n          <app-rating [rating]=\"7\" [backgroundColor]=\"backgroundColorForRating\"></app-rating>\n          <span class=\"d-flex justify-content-center\"><button class=\"btn btn-outline-warning\">Add in liked</button></span>\n        </div>\n\n      </div>\n\n      <div class=\"row\">\n\n        <div class=\"col-2\"></div>\n        <div class=\"col-6\"><p class=\"fs-2 text-center\">{{book.description}}</p></div>\n        <div class=\"col-4\"><p class=\"fs-2 text-center\">{{book.created | dateWithoutTime}}</p></div>\n\n      </div>\n      <hr class=\"bg-white border-2 border-top border-white\">\n      <div>\n        <app-book-reviews [reviews]=\"book.reviews\"></app-book-reviews>\n      </div>\n\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Review } from '../interfaces/review';\nimport { AuthenticationService } from '../shared/services/authentication.service';\n\n@Component({\n  selector: 'app-book-reviews',\n  templateUrl: './book-reviews.component.html',\n  styleUrls: ['./book-reviews.component.css']\n})\nexport class BookReviewsComponent {\n\n  @Input() public reviews: Review[];\n  @Input() public countVisibleLines = 2;\n  public readonly backgroundColorForRating = \"black\";\n  public show = false;\n\n  constructor(private _authnServise: AuthenticationService) { }\n\n  public showAllLines(id: string) {\n    let p = document.getElementById(id);\n    p.classList.toggle(\"all-lines\");\n  }\n\n  public checkOnAuthentication() {\n    if (!this._authnServise.isUserAuthenticated()) {\n      console.log(\"not auth\")\n      this._authnServise.logout();\n    }\n    else {\n      this.show = true;\n    }\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n\n    <div class=\"col-6\"><p class=\"fs-1 text-center\">COMMUNITY REVIEWS</p></div>\n    <div class=\"col-2\">\n\n    </div>\n    <div class=\"col-4\">\n      <div class=\"d-flex justify-content-center\">\n        <app-search [isButtonStyleWarning]=\"true\" [itemsForSearch]=\"\"></app-search>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"row\">\n\n    <div class=\"col-6\">\n        <app-rating *ngIf=\"reviews[0].rating !== null\" [rating]=\"reviews[0].rating\" [backgroundColor]=\"backgroundColorForRating\"></app-rating>\n    </div>\n    <div class=\"col-2\">\n    </div>\n    <div class=\"col-4\">\n    </div>\n\n  </div>\n\n  <hr class=\"bg-white border-2 border-top border-white\">\n\n  <div class=\"row\">\n    <p class=\"fs-min\">Start your review of this book if you want.</p>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"2\"><button class=\"btn btn-warning\" (click)=\"checkOnAuthentication()\">Write review</button></div>\n  </div>\n\n  <div *ngIf=\"show\" class=\"row\">\n    <app-review [book]=\"\"></app-review>\n  </div>\n  <hr class=\"bg-white border-2 border-top border-white\">\n\n  <!-- REVIEWS -->\n  <ng-container *ngFor=\"let review of reviews\">\n    <div class=\"row mt-5\">\n\n      <div class=\"col-2\">\n\n      </div>\n      <div class=\"col-4\">\n        <p class=\"fs-min font-color-gray\">{{review.applicationUser.name}}</p>\n      </div>\n      <div class=\"col-4\">\n        <p class=\"fs-min font-color-gray\">{{review.created | dateWithoutTime}}</p>\n      </div>\n\n    </div>\n\n    <div class=\"row\">\n\n      <div class=\"col-2\">\n        <img src=\"data:image/png;base64,{{review.applicationUser.avatar}}\" alt=\"Avatar\" class=\"avatar-size\">\n      </div>\n      <div class=\"col-10\">\n        <p class=\"fs-medium several-lines\" id={{review.id}}>{{review.description}}</p>\n        <a class=\"pointer\" (click)=\"showAllLines(review.id)\">...more</a>\n      </div>\n\n    </div>\n\n  </ng-container>\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BooksComponent } from '../books.component';\nimport { AuthenticationGuard } from 'src/app/guards/authentication.guard';\n\nconst routes: Routes = [\n  { path: 'books', component: BooksComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BooksRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BooksRoutingModule } from './books-routing.module';\nimport { SortingComponent } from '../sorting/sorting.component';\nimport { TilesComponent } from '../tiles/tiles.component';\nimport { BooksComponent } from '../books.component';\nimport { FormsModule } from '@angular/forms';\nimport { SharedModule } from '../../shared/shared.module';\nimport { BooksModalComponent } from '../tiles/books-modal/books-modal.component';\n\n\n@NgModule({\n  declarations: [\n    SortingComponent,\n    TilesComponent,\n    BooksComponent,\n    BooksModalComponent,\n  ],\n  imports: [\n    FormsModule,\n    CommonModule,\n    BooksRoutingModule,\n    SharedModule\n  ]\n})\nexport class BooksModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Book } from '../interfaces/book';\nimport { RequestService } from '../shared/services/request.service';\n\n@Component({\n  selector: 'app-books',\n  templateUrl: './books.component.html',\n  styleUrls: ['./books.component.css']\n})\nexport class BooksComponent implements OnInit {\n\n  public sourceBooks: Book[];\n  public outputBooks: Book[];\n  public arrayForSearch: string[] = [];\n\n  constructor(private _requestService: RequestService) { }\n\n  ngOnInit(): void {\n    this.loadBooks();\n  }\n\n  public loadBooks() {\n    this._requestService.getData(\"books/getbooks\")\n    .subscribe((res: Book[]) => {\n      console.log(res);\n      this.sourceBooks = res;\n      this.outputBooks = res;\n      this.makeBookNamesArray();\n    });\n  }\n\n  public makeBookNamesArray() {\n    this.arrayForSearch = this.sourceBooks.map(b => b.name);\n  }\n\n  public changeBookArrayBySearch(resultNamesArray: string[]) {\n    this.outputBooks = this.sourceBooks.filter(book => {\n      return resultNamesArray.includes(book.name);\n    });\n  }\n\n  public changeBookArrayByFilter(resultBooksArray: Book[]) {\n    this.outputBooks = resultBooksArray;\n  }\n}\n","<app-search (changeItems)=\"changeBookArrayBySearch($event)\" [itemsForSearch]=\"arrayForSearch\"></app-search>\n<div class=\"d-flex justify-content-center mt-5\">\n  <app-sorting (changeItems)=\"changeBookArrayByFilter($event)\" [itemsForSort]=\"sourceBooks\"></app-sorting>\n</div>\n<div class=\"mt-5\">\n  <app-tiles [books]=\"outputBooks\"></app-tiles>\n</div>\n\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Book } from 'src/app/interfaces/book';\n\n@Component({\n  selector: 'app-sorting',\n  templateUrl: './sorting.component.html',\n  styleUrls: ['./sorting.component.css']\n})\nexport class SortingComponent {\n\n  @Output() public changeItems = new EventEmitter<Book[]>();\n  @Input() public itemsForSort: Book[];\n\n  constructor() {}\n\n  public sort(option: string) {\n    if (option === 'default') {\n      this.changeItems.next(this.itemsForSort);\n    }\n    else if (option === 'rating') {\n      this.sortByRating();\n      this.changeItems.next(this.itemsForSort);\n    }\n    else if (option === 'date') {\n      this.sortByDate();\n      this.changeItems.next(this.itemsForSort);\n    }\n  }\n\n  private sortByRating() {\n    this.itemsForSort.sort((item, secondItem) => item.rating - secondItem.rating);\n  }\n\n  private sortByDate() {\n    this.itemsForSort.sort((item, secondItem) => {\n      return item.created > secondItem.created ? -1 : 1;\n    });\n  }\n}\n","<div class=\"select\" tabindex=\"1\">\n  <input class=\"selectopt\" name=\"test\" type=\"radio\" id=\"opt1\" checked (click)=\"sort('default')\">\n  <label for=\"opt1\" class=\"option\">Filter</label>\n  <input class=\"selectopt\" name=\"test\" type=\"radio\" id=\"opt2\" (click)=\"sort('rating')\">\n  <label for=\"opt2\" class=\"option\">Best rating</label>\n  <input class=\"selectopt\" name=\"test\" type=\"radio\" id=\"opt3\" (click)=\"sort('date')\">\n  <label for=\"opt3\" class=\"option\">Newest books</label>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Book } from 'src/app/interfaces/book';\n\n@Component({\n  selector: 'app-books-modal',\n  templateUrl: './books-modal.component.html',\n  styleUrls: ['./books-modal.component.css']\n})\nexport class BooksModalComponent {\n\n  @Input() public book: Book;\n\n  constructor(private _router: Router) { }\n\n  routeToBookPage() {\n    this._router.navigate(['/book/' + this.book.id]);\n  }\n}\n","<div class=\"modal-dialog modal-side modal-bottom-right modal-notify modal-info modal-custom\" role=\"document\">\n\n  <div class=\"modal-content\">\n\n    <div class=\"modal-header modal-headercolor d-flex justify-content-center\">\n      <h1>{{book.name}}</h1>\n    </div>\n\n    <div class=\"modal-body\">\n\n      <div class=\"row\">\n          <p class=\"col-6\">{{book.author}}</p>\n          <p class=\"col-6\">{{book.created | dateWithoutTime}}</p>\n      </div>\n\n      <div>\n        <app-rating [rating]=\"book.rating\"></app-rating>\n        <span class=\"d-flex justify-content-center\">\n          <button type=\"button\" class=\"btn btn-info btn-md waves-effect waves-light\" (click)=\"routeToBookPage()\">Read more</button>\n        </span>\n      </div>\n    </div>\n\n  </div>\n\n</div>\n\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Book } from 'src/app/interfaces/book';\nimport { RequestService } from 'src/app/shared/services/request.service';\n\n@Component({\n  selector: 'app-tiles',\n  templateUrl: './tiles.component.html',\n  styleUrls: ['./tiles.component.css']\n})\nexport class TilesComponent {\n\n  @Input() public books: Book[];\n\n  constructor(private _requestService: RequestService) { }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <ng-container *ngFor=\"let book of books\">\n      <div class=\"col-2 details\">\n\n        <span class=\"pointer\">\n          <img src=\"data:image/png;base64,{{book.imageCover}}\" class=\"me-3 mb-3 rounded\" alt=\"BookImage\">\n\n          <div class=\"position-absolute rounded-circle size bg-icon d-inline\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" fill=\"currentColor\" class=\"bi bi-bookmarks icon-style\" viewBox=\"0 0 16 16\">\n              <path d=\"M2 4a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v11.5a.5.5 0 0 1-.777.416L7 13.101l-4.223 2.815A.5.5 0 0 1 2 15.5V4zm2-1a1 1 0 0 0-1 1v10.566l3.723-2.482a.5.5 0 0 1 .554 0L11 14.566V4a1 1 0 0 0-1-1H4z\"/>\n              <path d=\"M4.268 1H12a1 1 0 0 1 1 1v11.768l.223.148A.5.5 0 0 0 14 13.5V2a2 2 0 0 0-2-2H6a2 2 0 0 0-1.732 1z\"/>\n            </svg>\n          </div>\n        </span>\n\n        <span class=\"popup\">\n          <app-books-modal [book]=\"book\"></app-books-modal>\n        </span>\n\n      </div>\n    </ng-container>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthResponse } from '../interfaces/auth-response';\nimport { UserForAuthentication } from '../interfaces/user-for-authentication';\nimport { AuthenticationService } from '../shared/services/authentication.service';\nimport { RequestService } from '../shared/services/request.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public loginForm: FormGroup;\n  public errorMessage: string = '';\n  public showError: boolean;\n\n  constructor(private _authenticationService: AuthenticationService, private _requestService: RequestService, private _router: Router, private _route: ActivatedRoute) { }\n\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      username: new FormControl(\"\", [Validators.required]),\n      password: new FormControl(\"\", [Validators.required])\n    })\n  }\n\n  public validateControl = (controlName: string) => {\n    return this.loginForm.controls[controlName].invalid && this.loginForm.controls[controlName].touched\n  }\n\n  public hasError = (controlName: string, errorName: string) => {\n    return this.loginForm.controls[controlName].hasError(errorName)\n  }\n\n  public loginUser = (loginFormValue) => {\n    this.showError = false;\n    const login = { ... loginFormValue };\n    const userForAuth: UserForAuthentication = {\n      email: login.username,\n      password: login.password\n    }\n    //check token\n    this._requestService.loginUser(userForAuth)\n    .subscribe((res:AuthResponse) => {\n      localStorage.setItem(\"token\", res.token);\n      this._authenticationService.sendAuthStateChangeNotification(res.isAuthSuccessful);\n      this._router.navigate(['/books']);\n    },\n    (error) => {\n      this.errorMessage = error;\n      this.showError = true;\n    });\n  }\n}\n","<section class=\"vh-100\">\n  <div class=\"container-fluid h-custom\">\n    <div class=\"row d-flex justify-content-center align-items-center h-100\">\n      <div class=\"col-md-8 col-lg-6 col-xl-3 offset-xl-1\">\n        <form [formGroup]=\"loginForm\" autocomplete=\"off\" novalidate (ngSubmit)=\"loginUser(loginForm.value)\">\n\n          <div>\n            <p class=\"text-center lead fw-normal mb-0 me-3\">Sign in with</p>\n          </div>\n\n          <div class=\"divider d-flex align-items-center my-4\">\n            <p class=\"text-center fw-bold mx-3 mb-0\">Or</p>\n          </div>\n\n          <div *ngIf=\"showError\" class=\"alert alert-danger\" role=\"alert\">\n            {{errorMessage}}\n          </div>\n\n          <!-- Email input -->\n          <div class=\"form-outline mb-4\">\n            <input type=\"text\" id=\"username\" formControlName=\"username\" class=\"form-control form-control-lg\"\n              placeholder=\"Enter a username\" />\n          </div>\n          <p *ngIf=\"validateControl('username') && hasError('username', 'required')\">Username is required</p>\n\n          <!-- Password input -->\n          <div class=\"form-outline mb-3\">\n            <input type=\"password\" id=\"password\" formControlName=\"password\" class=\"form-control form-control-lg\"\n              placeholder=\"Enter password\" />\n          </div>\n          <em *ngIf=\"validateControl('password') && hasError('password', 'required')\">Password is required</em>\n\n          <div class=\"text-center text-lg-start mt-1 pt-2\">\n            <div class=\"d-flex justify-content-center\">\n              <button type=\"submit\" class=\"btn btn-primary btn-lg\"\n              style=\"padding-left: 2.5rem; padding-right: 2.5rem;\"\n              [disabled]=\"!loginForm.valid\">Login</button>\n            </div>\n            <p class=\"text-center h-4 fw-bold mt-2 pt-1 mb-0\">Don't have an account?\n              <a [routerLink]=\"['/registration']\" class=\"h-4\">Register</a>\n            </p>\n          </div>\n\n        </form>\n      </div>\n    </div>\n  </div>\n</section>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../shared/shared.module';\nimport { LoginComponent } from './login.component';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\n\n\n@NgModule({\n  declarations: [\n    LoginComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    SharedModule\n  ]\n})\nexport class LoginModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-modal-success',\n  templateUrl: './modal-success.component.html',\n  styleUrls: ['./modal-success.component.css']\n})\nexport class ModalSuccessComponent {\n\n  constructor() { }\n}\n","\n<!-- Modal -->\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Modal title</h5>\n        <button type=\"button\" class=\"btn-close\" data-mdb-dismiss=\"modal\" aria-label=\"Close\"></button>\n      </div>\n      <div class=\"modal-body\">Success</div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-mdb-dismiss=\"modal\">Close</button>\n        <button type=\"button\" class=\"btn btn-primary\">Save changes</button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'dateWithoutTime'\n})\nexport class DateWithoutTimePipe implements PipeTransform {\n\n  transform(date: Date) {\n    let currentDate = new Date(date);\n    return currentDate.toDateString().split('T');\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rating',\n  templateUrl: './rating.component.html',\n  styleUrls: ['./rating.component.css']\n})\nexport class RatingComponent implements OnInit {\n\n  @Input() public rating: number;\n  @Input() public backgroundColor: string;\n  public countStars: number[];\n  public remainingStars: number[];\n  public readonly maxRating = 10;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.rating = Math.round(this.rating);\n    this.fillArray();\n    this.getCountRemainingStars();\n  }\n\n  public fillArray() {\n    this.countStars = Array.from({ length: this.rating }, (_, i) => i + 1);\n  }\n\n  public getCountRemainingStars() {\n    const countRemainingStars = this.maxRating - this.rating;\n    if (countRemainingStars > 0) {\n      this.remainingStars = Array.from({ length: countRemainingStars }, (_, i) => i + 1);\n    }\n  }\n}\n","<div class=\"container d-flex justify-content-center align-items-center\">\n  <div [style.--background-color]=\"backgroundColor\" class=\"card p-3\">\n      <div class=\"d-flex justify-content-between align-items-center\">\n          <div class=\"ratings\">\n\n            <ng-container *ngFor=\"let star of countStars\">\n              <i class=\"fa fa-star rating-color\"></i>\n            </ng-container>\n\n            <ng-container *ngFor=\"let star of remainingStars\">\n              <i class=\"fa fa-star\"></i>\n            </ng-container>\n\n          </div>\n          <h5 class=\"review-count\">{{rating}}</h5>\n      </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserForRegistration } from '../interfaces/user-for-registration.model';\nimport { RequestService } from '../shared/services/request.service';\nimport { PasswordConfirmationValidatorService } from '../shared/custom-validators/password-confirmation-validator.service';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  public registerForm: FormGroup;\n  public errorMessages: string[];\n  public showError: boolean;\n\n  constructor(public requestService: RequestService, private _passConfValidator: PasswordConfirmationValidatorService,\n    private _router: Router) { }\n\n  ngOnInit(): void {\n    this.registerForm = new FormGroup({\n      name: new FormControl(''),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required]),\n      confirmPassword: new FormControl('')\n    });\n    this.registerForm.get('confirmPassword').setValidators([Validators.required,\n      this._passConfValidator.validateConfirmPassword(this.registerForm.get('password'))]);\n  }\n\n  public validateControl(controlName: string) {\n    return this.registerForm.controls[controlName].invalid && this.registerForm.controls[controlName].touched\n  }\n\n  public hasError(controlName: string, errorName: string) {\n    return this.registerForm.controls[controlName].hasError(errorName)\n  }\n\n  public registerUser(registerFormValue) {\n    this.showError = false;\n    const formValues = { ...registerFormValue };\n\n    const user: UserForRegistration = {\n      name: formValues.name,\n      email: formValues.email,\n      password: formValues.password,\n      confirmPassword: formValues.confirmPassword\n    };\n\n    this.requestService.registerUser(user)\n    .subscribe(_ => {\n      this._router.navigate([\"/login\"]);\n    },\n    error => {\n      this.errorMessages = error;\n      this.showError = true;\n    })\n  }\n\n}\n","<section class=\"vh-100\">\n  <div class=\"container-fluid h-custom\">\n    <div class=\"row d-flex justify-content-center align-items-center h-100\">\n      <div class=\"col-md-8 col-lg-6 col-xl-3 offset-xl-1\">\n        <form [formGroup]=\"registerForm\" autocomplete=\"off\" novalidate (ngSubmit)=\"registerUser(registerForm.value)\">\n          <div>\n            <p class=\"text-center lead fw-normal mb-0 me-3\">Sign up</p>\n          </div>\n\n          <div class=\"divider d-flex align-items-center my-4\">\n          </div>\n\n          <div *ngIf=\"showError\" class=\"alert alert-danger\" role=\"alert\">\n            <span [innerHTML]=\"errorMessages\"></span>\n          </div>\n          <!-- Name input -->\n          <div class=\"form-outline mb-4\">\n            <input type=\"text\" id=\"formName\" formControlName=\"name\" class=\"form-control form-control-lg\"\n              placeholder=\"Enter name\" />\n          </div>\n\n          <!-- Email input -->\n          <div class=\"form-outline mb-4\">\n            <input type=\"email\" id=\"formEmail\" formControlName=\"email\" class=\"form-control form-control-lg\"\n              placeholder=\"Enter a valid email address\" />\n            <div class=\"col-md-5\">\n              <p *ngIf=\"validateControl('email') && hasError('email', 'email')\">Please provide a valid email</p>\n              <p *ngIf=\"validateControl('email') && hasError('email', 'required')\">Email is required</p>\n            </div>\n          </div>\n\n          <!-- Password input -->\n          <div class=\"form-outline mb-3\">\n            <input type=\"password\" id=\"formPassword\" formControlName=\"password\" class=\"form-control form-control-lg\"\n              placeholder=\"Enter password\" />\n            <div class=\"col-md-5\">\n              <em *ngIf=\"validateControl('password') && hasError('password', 'required')\">Password is required</em>\n            </div>\n          </div>\n\n\n          <!-- Second password input -->\n          <div class=\"form-outline mb-3\">\n            <input type=\"password\" id=\"formSecondPassword\" formControlName=\"confirmPassword\" class=\"form-control form-control-lg\"\n              placeholder=\"Repeat password\" />\n            <div class=\"col-md-5\">\n              <p *ngIf=\"validateControl('confirmPassword') && hasError('confirmPassword', 'required')\">Confirmation is required</p>\n              <p *ngIf=\"hasError('confirmPassword', 'mustMatch')\">Passwords must match</p>\n            </div>\n          </div>\n\n          <!-- Checkbox not implemented-->\n          <!-- <div class=\"form-check mb-5\">\n            <input class=\"form-check-input me-2\" type=\"checkbox\" value=\"\" id=\"formCheckbox\"/>\n            <label class=\"form-check-label\" for=\"formCheckbox\">\n              I agree with all statements\n            </label>\n          </div> -->\n\n          <div class=\"text-lg-start mt-4 pt-2\">\n            <div class=\"d-flex justify-content-center\">\n              <button type=\"submit\" class=\"btn btn-primary btn-lg\"\n              style=\"padding-left: 2.5rem; padding-right: 2.5rem;\" [disabled]=\"!registerForm.valid\">Register</button>\n            </div>\n            <p class=\"text-center h-4 fw-bold mt-2 pt-1 mb-0\">Have already an account?\n              <a href=\"#!\" routerLink=\"/login\" class=\"h-4\" [routerLink]=\"['/registration']\">Login here</a>\n            </p>\n          </div>\n\n        </form>\n      </div>\n    </div>\n  </div>\n</section>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RegistrationComponent } from './registration.component';\nimport { RouterModule } from '@angular/router';\n\n\n\n@NgModule({\n  declarations: [\n    RegistrationComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    SharedModule\n  ]\n})\nexport class RegistrationModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Book } from '../interfaces/book';\nimport { Review } from '../interfaces/review';\nimport { User } from '../interfaces/user';\nimport { RequestService } from '../shared/services/request.service';\n\n@Component({\n  selector: 'app-review',\n  templateUrl: './review.component.html',\n  styleUrls: ['./review.component.css']\n})\nexport class ReviewComponent {\n\n  @Input() public book: Book;\n  public userText: string;\n  public showSuccessWindow = false;\n  public showError = false\n  public errorMessages: string;\n\n  constructor(private _requestService: RequestService) { }\n\n  sendReview() {\n    const user: User = {\n      token: localStorage.getItem(\"token\"),\n      id: '',\n      name: '',\n      avatar: ''\n    }\n\n    const review: Review = {\n      applicationUser: user,\n      book: this.book,\n      description: this.userText,\n      created: new Date(),\n    }\n\n    this._requestService.setReview(review)\n    .subscribe(_ => {\n      this.showSuccessWindow = true;\n    },\n    error => {\n      this.errorMessages = error;\n      this.showError = true;\n    })\n  }\n}\n","<app-modal-success *ngIf=\"showSuccessWindow\"></app-modal-success>\n<div class=\"md-form mb-4 pink-textarea active-pink-textarea\">\n  <textarea [(ngModel)]=\"userText\" class=\"md-textarea form-control\" rows=\"3\"></textarea>\n  <label for=\"form18\"></label>\n</div>\n<button class=\"btn btn-warning\" (click)=\"sendReview()\">Send</button>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent {\n\n  @Output() public changeItems = new EventEmitter<string[]>();\n  @Input() public itemsForSearch: string[];\n  @Input() public isButtonStyleWarning: boolean;\n  public searchValue: string;\n\n  constructor() { }\n\n  public search(searchText: string) {\n\n    if (!this.itemsForSearch) {\n      return this.changeItems.next(this.itemsForSearch);\n    }\n\n    if (!searchText) {\n      return this.changeItems.next(this.itemsForSearch);\n    }\n\n    searchText = searchText.toLocaleLowerCase();\n\n    const resultArray =  this.itemsForSearch.filter(it => {\n      return it.toLocaleLowerCase().includes(searchText);\n    });\n\n    if (resultArray !== undefined) {\n      return this.changeItems.next(resultArray);\n    }\n    else {\n      return this.changeItems.next(this.itemsForSearch);\n    }\n  }\n}\n\n","<div class=\"d-flex justify-content-center\">\n  <div>\n    <input type=\"search\" id=\"form1\" class=\"form-control border rounded-pill\" placeholder=\"Enter book name\" [(ngModel)]=\"searchValue\"/>\n  </div>\n  <button type=\"button\" class=\"btn btn-primary button-size border rounded-pill ms-n5\" [class.btn-warning]=\"isButtonStyleWarning\" (click)=\"search(searchValue)\">\n    <i class=\"fa fa-search\" aria-hidden=\"true\"></i>\n  </button>\n</div>\n<!-- <div class=\"col-md-5 mx-auto\">\n  <div class=\"small fw-light\">search input with icon</div>\n  <div class=\"input-group\">\n      <input class=\"form-control border-end-0 border rounded-pill\" type=\"search\" value=\"search\" id=\"example-search-input\">\n      <span class=\"input-group-append\">\n          <button class=\"btn btn-outline-secondary bg-white border-bottom-0 border rounded-pill ms-n5\" type=\"button\">\n              <i class=\"fa fa-search\"></i>\n          </button>\n      </span>\n  </div>\n</div> -->\n","import { ConstantPool } from '@angular/compiler';\nimport { Injectable } from '@angular/core';\nimport { AbstractControl, ValidatorFn } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PasswordConfirmationValidatorService {\n\n  constructor() { }\n\n  public validateConfirmPassword(passwordControl: AbstractControl): ValidatorFn {\n    return (confirmationControl: AbstractControl) : { [key: string]: boolean } | null => {\n\n      const confirmValue = confirmationControl.value;\n      const passwordValue = passwordControl.value;\n\n      if (confirmValue !== passwordValue && confirmValue === '') {\n          return  { mustMatch: true }\n      }\n\n      return null;\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  private _authChangeSub = new Subject<boolean>()\n  public authChanged = this._authChangeSub.asObservable();\n\n  constructor(private _jwtHelper: JwtHelperService, private _router: Router) { }\n\n  public logout() {\n    localStorage.removeItem(\"token\");\n    this.sendAuthStateChangeNotification(false);\n    this._router.navigate(['/login']);\n  }\n\n  public sendAuthStateChangeNotification(isAuthenticated: boolean) {\n    this._authChangeSub.next(isAuthenticated);\n  }\n\n  public isUserAuthenticated() {\n    const token = localStorage.getItem(\"token\");\n\n    return token && !this._jwtHelper.isTokenExpired(token);\n  }\n\n  public isUserAdmin() {\n    // check undefined\n    const token = localStorage.getItem(\"token\");\n    const decodedToken = this._jwtHelper.decodeToken(token);\n    const role = decodedToken['http://schemas.microsoft.com/ws/2008/06/identity/claims/role']\n\n    return role === 'Administrator';\n  }\n\n}\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { catchError, Observable, throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorHandlingService {\n\n  constructor(private _router: Router) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req)\n    .pipe(\n      catchError((error: HttpErrorResponse) => {\n        let errorMessage = this.handleError(error);\n        return throwError(errorMessage);\n      })\n    )\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 404) {\n      return this.handleNotFound(error);\n    }\n    else if (error.status === 400) {\n      return this.handleBadRequest(error);\n    }\n    else if (error.status === 401) {\n      return this.handleUnauthorized(error);\n    }\n    return null;\n  }\n\n  private handleUnauthorized(error: HttpErrorResponse) {\n    if (this._router.url === '/login') {\n      return 'Authenitcation failed. Wrong Username or Password';\n    }\n    else {\n      this._router.navigate(['/login'], { queryParams: { returnUrl: this._router.url } });\n      return error.message;\n    }\n  }\n\n  private handleNotFound(error: HttpErrorResponse) {\n    this._router.navigate(['/404']);\n    return error.message;\n  }\n\n  private handleBadRequest(error: HttpErrorResponse) {\n    if (this._router.url === '/registration') {\n      let message = '';\n      const values = Object.values(error.error.errors);\n      values.map((m: string) => {\n         message += m + '<br>';\n      })\n\n      return message.slice(0, -4);\n    }\n    else {\n      return error.error ?? error.message;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { UserForRegistration } from '../../interfaces/user-for-registration.model';\nimport { RegistrationResponse } from '../../interfaces/registration-response.model';\nimport { UserForAuthentication } from 'src/app/interfaces/user-for-authentication';\nimport { AuthResponse } from 'src/app/interfaces/auth-response';\nimport { environment } from 'src/environments/environment';\nimport { Review } from 'src/app/interfaces/review';\n\n@Injectable()\n\nexport class RequestService {\n\n  private _url = environment.url;\n\n  public constructor(private _http: HttpClient) {\n  }\n\n  public registerUser(user: UserForRegistration) {\n    return this._http.post<RegistrationResponse>(this._url + 'account/Registration', user);\n  }\n\n  public loginUser(user: UserForAuthentication) {\n    return this._http.post<AuthResponse>(this._url + 'account/Login', user);\n  }\n\n  public getData(route: string) {\n    console.log(this._url + route);\n    return this._http.get(this._url + route);\n  }\n\n  public setReview(review: Review) {\n    return this._http.post(this._url + 'review/SaveReview', review);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { DateWithoutTimePipe } from '../pipes/date-without-time.pipe';\nimport { RatingComponent } from '../rating/rating.component';\nimport { SearchComponent } from '../search/search.component';\nimport { BookReviewsComponent } from '../book-reviews/book-reviews.component';\nimport { ModalSuccessComponent } from '../modal-success/modal-success.component';\nimport { ReviewComponent } from '../review/review.component';\n\n\n\n@NgModule({\n  declarations: [\n    DateWithoutTimePipe,\n    RatingComponent,\n    SearchComponent,\n    BookReviewsComponent,\n    ModalSuccessComponent,\n    ReviewComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserModule,\n    NgbModule,\n    DateWithoutTimePipe,\n    RatingComponent,\n    SearchComponent,\n    BookReviewsComponent,\n    ModalSuccessComponent\n  ]\n})\nexport class SharedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  url: 'https://localhost:5001/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}