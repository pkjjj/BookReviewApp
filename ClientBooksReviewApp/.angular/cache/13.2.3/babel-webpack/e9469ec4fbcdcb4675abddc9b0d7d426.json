{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@auth0/angular-jwt\";\nimport * as i2 from \"@angular/router\";\nexport let AuthenticationService = /*#__PURE__*/(() => {\n  class AuthenticationService {\n    constructor(_jwtHelper, _router) {\n      this._jwtHelper = _jwtHelper;\n      this._router = _router;\n      this._authChangeSub = new Subject();\n      this.authChanged = this._authChangeSub.asObservable();\n    }\n\n    logout() {\n      localStorage.removeItem(\"token\");\n      this.sendAuthStateChangeNotification(false);\n\n      this._router.navigate(['/login']);\n    }\n\n    sendAuthStateChangeNotification(isAuthenticated) {\n      this._authChangeSub.next(isAuthenticated);\n    }\n\n    isUserAuthenticated() {\n      const token = localStorage.getItem(\"token\");\n      return token && !this._jwtHelper.isTokenExpired(token);\n    }\n\n    isUserAdmin() {\n      // check undefined\n      const token = localStorage.getItem(\"token\");\n\n      const decodedToken = this._jwtHelper.decodeToken(token);\n\n      const role = decodedToken['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\n      return role === 'Administrator';\n    }\n\n  }\n\n  AuthenticationService.ɵfac = function AuthenticationService_Factory(t) {\n    return new (t || AuthenticationService)(i0.ɵɵinject(i1.JwtHelperService), i0.ɵɵinject(i2.Router));\n  };\n\n  AuthenticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthenticationService,\n    factory: AuthenticationService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthenticationService;\n})();","map":null,"metadata":{},"sourceType":"module"}